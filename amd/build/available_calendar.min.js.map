{"version":3,"file":"available_calendar.min.js","sources":["../src/available_calendar.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Manage the calendar\n *\n * @module     mod_bookit/available_calendar\n * @copyright  2024 Melanie Treitinger, Justus Dieckmann RUB\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as Ajax from 'core/ajax';\nimport {getString} from 'core/str';\nimport ModalEvents from 'core/modal_events';\nimport ModalForm from 'core_form/modalform';\nimport {prefetchStrings} from 'core/prefetch';\nimport {theGlobalProperty} from \"mod_bookit/calendar\";\n\n/**\n * Initializes the calendar.\n * @param {string} eventsource\n * @param {array} capabilities\n * @param {string} lang\n * @returns {Promise<void>}\n */\nexport async function init(eventsource, capabilities, lang) {\n    await theGlobalProperty('EventCalendar');\n\n    // Define toolbarbuttons.\n    const toolbarbuttons = 'prev, next, today, addButton';\n\n    // String variables.\n    prefetchStrings('mod_bookit', ['add_blocker']);\n    prefetchStrings('core', ['today', 'month', 'week']);\n    prefetchStrings('calendar', ['day', 'upcomingevents']);\n    const str_request_booking = await getString('add_blocker', 'mod_bookit');\n    const str_today = await getString('today');\n    const str_month = await getString('month');\n    const str_week = await getString('week');\n    const str_day = await getString('day', 'calendar');\n    const str_list = await getString('upcomingevents', 'calendar');\n\n    // Define viewtype.\n    let viewType = 'timeGridWeek';\n    if (window.screen.width <= 1000) {\n        viewType = 'listWeek';\n    }\n\n    var calendar;\n\n    calendar = new window.EventCalendar(document.getElementById('ec'), {\n        locale: lang,\n        view: viewType,\n        firstDay: 1,\n        scrollTime: '09:00:00',\n        slotMinTime: '07:00:00',\n        dayMaxEvents: true,\n        nowIndicator: true,\n        selectable: false,\n        eventBackgroundColor: '#035AA3',\n        eventStartEditable: false,\n        eventDurationEditable: false,\n        buttonText: function(text) {\n            text.today = str_today;\n            text.dayGridMonth = str_month;\n            text.timeGridWeek = str_week;\n            text.timeGridDay = str_day;\n            text.listWeek = str_list;\n            return text;\n        },\n        customButtons: {\n            addButton: {\n                text: str_request_booking,\n                click: function() {\n                    const modalForm = new ModalForm({\n                        formClass: \"mod_bookit\\\\local\\\\form\\\\edit_blocker_form\",\n                        args: {\n                        },\n                        modalConfig: {title: getString('add_blocker', 'mod_bookit')},\n                    });\n                    modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n                        calendar.refetchEvents();\n                    });\n                    modalForm.show();\n                }\n            }\n        },\n        dateClick: function(info) {\n            let d = new Date();\n            let dateoff = new Date(d.setMinutes(d.getMinutes() - d.getTimezoneOffset()));\n            let startdate = info.dateStr;\n            if (startdate > dateoff.toISOString()) {\n                const modalForm = new ModalForm({\n                    formClass: \"mod_bookit\\\\local\\\\form\\\\edit_blocker_form\",\n                    args: {\n                        startdate: startdate,\n                    },\n                    modalConfig: {title: getString('add_blocker', 'mod_bookit')},\n                });\n                modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n                    calendar.refetchEvents();\n                });\n                modalForm.show();\n            }\n        },\n        eventClick: function(info) {\n            if (info.event.extendedProps.type === 'blocker') {\n                const modalForm = new ModalForm({\n                    formClass: \"mod_bookit\\\\local\\\\form\\\\edit_blocker_form\",\n                    args: {\n                        id: info.event.id,\n                    },\n                    modalConfig: {\n                        title: getString('edit_blocker', 'mod_bookit'),\n                    },\n                    moduleName: 'mod_bookit/modal_delete_save_cancel',\n                });\n                modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n                    calendar.refetchEvents();\n                });\n                modalForm.addEventListener(modalForm.events.LOADED, () => {\n                    modalForm.modal.getRoot().on(ModalEvents.delete, async() => {\n                        await deleteBlocker(info.event.id);\n                        calendar.refetchEvents();\n                    });\n                });\n                modalForm.show();\n            }\n        },\n        headerToolbar: {\n            start: toolbarbuttons,\n            center: 'title',\n            end: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'\n        },\n        resources: [],\n        eventSources: [\n            {\n                url: eventsource,\n            },\n        ],\n        views: {\n            timeGridWeek: {pointer: true},\n            resourceTimeGridWeek: {pointer: true},\n            resourceTimelineWeek: {\n                pointer: true,\n                slotMinTime: '09:00',\n                slotMaxTime: '21:00',\n                slotWidth: 80,\n                resources: []\n            }\n        },\n    });\n}\n\n/**\n * Deletes a blocker.\n *\n * @param {int} blockerId\n * @returns Promise<any>\n */\nfunction deleteBlocker(blockerId) {\n    return Ajax.call([{\n        methodname: 'mod_bookit_delete_blocker',\n        args: {\n            blockerid: blockerId\n        }\n    }])[0];\n}\n"],"names":["eventsource","capabilities","lang","str_request_booking","str_today","str_month","str_week","str_day","str_list","viewType","window","screen","width","calendar","EventCalendar","document","getElementById","locale","view","firstDay","scrollTime","slotMinTime","dayMaxEvents","nowIndicator","selectable","eventBackgroundColor","eventStartEditable","eventDurationEditable","buttonText","text","today","dayGridMonth","timeGridWeek","timeGridDay","listWeek","customButtons","addButton","click","modalForm","ModalForm","formClass","args","modalConfig","title","addEventListener","events","FORM_SUBMITTED","refetchEvents","show","dateClick","info","d","Date","dateoff","setMinutes","getMinutes","getTimezoneOffset","startdate","dateStr","toISOString","eventClick","event","extendedProps","type","id","moduleName","LOADED","modal","getRoot","on","ModalEvents","delete","async","blockerId","Ajax","call","methodname","blockerid","headerToolbar","start","center","end","resources","eventSources","url","views","pointer","resourceTimeGridWeek","resourceTimelineWeek","slotMaxTime","slotWidth"],"mappings":";;;;;;;;eAqC2BA,YAAaC,aAAcC,YAC5C,+BAAkB,+CAMR,aAAc,CAAC,8CACf,OAAQ,CAAC,QAAS,QAAS,uCAC3B,WAAY,CAAC,MAAO,yBAC9BC,0BAA4B,kBAAU,cAAe,cACrDC,gBAAkB,kBAAU,SAC5BC,gBAAkB,kBAAU,SAC5BC,eAAiB,kBAAU,QAC3BC,cAAgB,kBAAU,MAAO,YACjCC,eAAiB,kBAAU,iBAAkB,gBAG/CC,SAAW,eACXC,OAAOC,OAAOC,OAAS,MACvBH,SAAW,gBAGXI,SAEJA,SAAW,IAAIH,OAAOI,cAAcC,SAASC,eAAe,MAAO,CAC/DC,OAAQf,KACRgB,KAAMT,SACNU,SAAU,EACVC,WAAY,WACZC,YAAa,WACbC,cAAc,EACdC,cAAc,EACdC,YAAY,EACZC,qBAAsB,UACtBC,oBAAoB,EACpBC,uBAAuB,EACvBC,WAAY,SAASC,aACjBA,KAAKC,MAAQ1B,UACbyB,KAAKE,aAAe1B,UACpBwB,KAAKG,aAAe1B,SACpBuB,KAAKI,YAAc1B,QACnBsB,KAAKK,SAAW1B,SACTqB,MAEXM,cAAe,CACXC,UAAW,CACPP,KAAM1B,oBACNkC,MAAO,iBACGC,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,6CACXC,KAAM,GAENC,YAAa,CAACC,OAAO,kBAAU,cAAe,iBAElDL,UAAUM,iBAAiBN,UAAUO,OAAOC,gBAAgB,KACxDjC,SAASkC,mBAEbT,UAAUU,UAItBC,UAAW,SAASC,UACZC,EAAI,IAAIC,KACRC,QAAU,IAAID,KAAKD,EAAEG,WAAWH,EAAEI,aAAeJ,EAAEK,sBACnDC,UAAYP,KAAKQ,WACjBD,UAAYJ,QAAQM,cAAe,OAC7BrB,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,6CACXC,KAAM,CACFgB,UAAWA,WAEff,YAAa,CAACC,OAAO,kBAAU,cAAe,iBAElDL,UAAUM,iBAAiBN,UAAUO,OAAOC,gBAAgB,KACxDjC,SAASkC,mBAEbT,UAAUU,SAGlBY,WAAY,SAASV,SACqB,YAAlCA,KAAKW,MAAMC,cAAcC,KAAoB,OACvCzB,UAAY,IAAIC,mBAAU,CAC5BC,UAAW,6CACXC,KAAM,CACFuB,GAAId,KAAKW,MAAMG,IAEnBtB,YAAa,CACTC,OAAO,kBAAU,eAAgB,eAErCsB,WAAY,wCAEhB3B,UAAUM,iBAAiBN,UAAUO,OAAOC,gBAAgB,KACxDjC,SAASkC,mBAEbT,UAAUM,iBAAiBN,UAAUO,OAAOqB,QAAQ,KAChD5B,UAAU6B,MAAMC,UAAUC,GAAGC,sBAAYC,QAAQC,cAuC9CC,gBAAAA,UAtCqBvB,KAAKW,MAAMG,GAuC5CU,KAAKC,KAAK,CAAC,CACdC,WAAY,4BACZnC,KAAM,CACFoC,UAAWJ,cAEf,IA3CgB5D,SAASkC,sBAGjBT,UAAUU,SAGlB8B,cAAe,CACXC,MArGe,+BAsGfC,OAAQ,QACRC,IAAK,kDAETC,UAAW,GACXC,aAAc,CACV,CACIC,IAAKpF,cAGbqF,MAAO,CACHrD,aAAc,CAACsD,SAAS,GACxBC,qBAAsB,CAACD,SAAS,GAChCE,qBAAsB,CAClBF,SAAS,EACTjE,YAAa,QACboE,YAAa,QACbC,UAAW,GACXR,UAAW"}