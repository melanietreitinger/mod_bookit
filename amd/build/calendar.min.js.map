{"version":3,"file":"calendar.min.js","sources":["../src/calendar.js"],"sourcesContent":["import {get_string as getString} from 'core/str';\nimport ModalForm from 'core_form/modalform';\nimport Prefetch from 'core/prefetch';\n\nconst theGlobalProperty = (globalPropertyName) => {\n    return new Promise((resolve) => {\n       const innerWait = () => {\n           if (!window[globalPropertyName]) {\n               setTimeout(innerWait, 20);\n           }\n           resolve();\n       };\n       innerWait();\n    });\n};\n\n/**\n * Initializes the calendar.\n * @param {int} cmid\n * @param {string} moduleinstanceid\n * @param {string} eventsource\n * @returns {Promise<void>}\n */\nexport async function init(cmid, moduleinstanceid, eventsource) {\n    Prefetch.prefetchString('mod_bookit', 'addbooking');\n    await theGlobalProperty('EventCalendar');\n    const str_request_booking = await getString('addbooking', 'mod_bookit');\n\n    let viewType = 'timeGridWeek';\n    if (window.screen.width <= 1000) {\n        viewType = 'listWeek';\n    }\n\n    var calendar;\n\n    calendar = new window.EventCalendar(document.getElementById('ec'), {\n        view: viewType,\n        firstDay: 1,\n        customButtons: {\n            addButton: {\n                text: str_request_booking,\n                click: function() {\n                    const modalForm = new ModalForm({\n                                    formClass: \"mod_bookit\\\\form\\\\edit_event_form\",\n                                    args: {\n                                        cmid: cmid,\n                                    },\n                                    modalConfig: {title: getString('edit_event', 'mod_bookit')},\n                                });\n                                modalForm.show();\n                }\n            }\n        },\n        eventClick: function (info) {\n            id = info.event.id;\n            id = id.match(/generated-/) ? id.replace(/[{}generated-]/g, '')  : id;\n\n            console.log(info);\n            console.log(\"cmid: \"+cmid);\n            console.log(\"id: \"+id);\n\n            const modalForm = new ModalForm({\n                formClass: \"mod_bookit\\\\form\\\\edit_event_form\",\n                args: {\n                    cmid: cmid,\n                    id: id,\n                },\n                modalConfig: {title: getString('edit_event', 'mod_bookit')},\n            });\n            modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, () => {\n                //window.location.reload();\n                calendar.refetchEvents();\n            });\n            modalForm.show();\n        },\n        headerToolbar: {\n            start: 'prev,next today, addButton',\n            center: 'title',\n            end: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek resourceTimeGridWeek,resourceTimelineWeek'\n        },\n        resources: [],\n        eventSources: [\n            {\n                url: eventsource,\n            },\n        ],\n        scrollTime: '09:00:00',\n        slotMinTime: '07:00:00',\n        views: {\n            timeGridWeek: {pointer: true},\n            resourceTimeGridWeek: {pointer: true},\n            resourceTimelineWeek: {\n                pointer: true,\n                slotMinTime: '09:00',\n                slotMaxTime: '21:00',\n                slotWidth: 80,\n                resources: []\n            }\n        },\n        dayMaxEvents: true,\n        nowIndicator: true,\n        selectable: true,\n        eventStartEditable: false\n    });\n}\n"],"names":["cmid","moduleinstanceid","eventsource","prefetchString","globalPropertyName","Promise","resolve","innerWait","window","setTimeout","str_request_booking","viewType","screen","width","calendar","EventCalendar","document","getElementById","view","firstDay","customButtons","addButton","text","click","ModalForm","formClass","args","modalConfig","title","show","eventClick","info","id","event","match","replace","console","log","modalForm","addEventListener","events","FORM_SUBMITTED","refetchEvents","headerToolbar","start","center","end","resources","eventSources","url","scrollTime","slotMinTime","views","timeGridWeek","pointer","resourceTimeGridWeek","resourceTimelineWeek","slotMaxTime","slotWidth","dayMaxEvents","nowIndicator","selectable","eventStartEditable"],"mappings":"+SAuB2BA,KAAMC,iBAAkBC,+BACtCC,eAAe,aAAc,oBApBfC,mBAqBC,gBApBjB,IAAIC,SAASC,gBACXC,UAAY,KACTC,OAAOJ,qBACRK,WAAWF,UAAW,IAE1BD,WAEJC,gBARoBH,IAAAA,yBAsBjBM,0BAA4B,mBAAU,aAAc,kBAEtDC,SAAW,eACXH,OAAOI,OAAOC,OAAS,MACvBF,SAAW,gBAGXG,SAEJA,SAAW,IAAIN,OAAOO,cAAcC,SAASC,eAAe,MAAO,CAC/DC,KAAMP,SACNQ,SAAU,EACVC,cAAe,CACXC,UAAW,CACPC,KAAMZ,oBACNa,MAAO,WACe,IAAIC,mBAAU,CAChBC,UAAW,oCACXC,KAAM,CACF1B,KAAMA,MAEV2B,YAAa,CAACC,OAAO,mBAAU,aAAc,iBAEvCC,UAIlCC,WAAY,SAAUC,MAClBC,GAAKD,KAAKE,MAAMD,GAChBA,GAAKA,GAAGE,MAAM,cAAgBF,GAAGG,QAAQ,kBAAmB,IAAOH,GAEnEI,QAAQC,IAAIN,MACZK,QAAQC,IAAI,SAASrC,MACrBoC,QAAQC,IAAI,OAAOL,UAEbM,UAAY,IAAId,mBAAU,CAC5BC,UAAW,oCACXC,KAAM,CACF1B,KAAMA,KACNgC,GAAIA,IAERL,YAAa,CAACC,OAAO,mBAAU,aAAc,iBAEjDU,UAAUC,iBAAiBD,UAAUE,OAAOC,gBAAgB,KAExD3B,SAAS4B,mBAEbJ,UAAUT,QAEdc,cAAe,CACXC,MAAO,6BACPC,OAAQ,QACRC,IAAK,4FAETC,UAAW,GACXC,aAAc,CACV,CACIC,IAAK/C,cAGbgD,WAAY,WACZC,YAAa,WACbC,MAAO,CACHC,aAAc,CAACC,SAAS,GACxBC,qBAAsB,CAACD,SAAS,GAChCE,qBAAsB,CAClBF,SAAS,EACTH,YAAa,QACbM,YAAa,QACbC,UAAW,GACXX,UAAW,KAGnBY,cAAc,EACdC,cAAc,EACdC,YAAY,EACZC,oBAAoB"}